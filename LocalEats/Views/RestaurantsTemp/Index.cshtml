@model IEnumerable<LocalEats.Models.RestaurantVm>

@{
    ViewBag.Title = "Index";
}

<div id="map_canvas"></div>
<div id="map_spacer"></div>



<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RestautantId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantStreet)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantCity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantState)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantZipcode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Features)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantPhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RestaurantPhoto)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PossibleMenus)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RestautantId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantStreet)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantCity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantState)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantZipcode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Features)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantPhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RestaurantPhoto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PossibleMenus)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {/* id=item.PrimaryKey */}) |
                @Html.ActionLink("Details", "Details", new {/* id=item.PrimaryKey */}) |
                @Html.ActionLink("Delete", "Delete", new {/* id=item.PrimaryKey */})
            </td>
        </tr>
    }
</table>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAm0-zI5LsfbmxymSAXnmT4qHUMJGel_nA"></script>
<script type="text/javascript">
    var markerCount = 0;
    var map;

    //Initializes the map…
    function initialize() {
        var myLatlng = new google.maps.LatLng(34.745806, -92.288358);
        var geocoder = new google.maps.Geocoder();
        var map_canvas = document.getElementById('map_canvas');
        var map_options = {
            center: myLatlng,
            zoom: 10,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(map_canvas, map_options);

        @foreach (var r in Model)
         {
        <text>geocodeAddress("@r.RestaurantStreet @r.RestaurantCity, @r.RestaurantState", geocoder, "@r.RestaurantName");</text>
            }
    }

    //When the window is loaded, run the initialize function to
    //setup the map
    google.maps.event.addDomListener(window, 'load', initialize);


    function addMarkerToMap(lat, long, htmlMarkupForInfoWindow) {
        var infowindow = new google.maps.InfoWindow();
        var myLatLng = new google.maps.LatLng(lat, long);

        console.log(map);
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            animation: google.maps.Animation.DROP,
        });

        //Gives each marker an Id for the on click
        markerCount++;

        //Creates the event listener for clicking the marker
        //and places the marker on the map
        google.maps.event.addListener(marker, 'click', (function (marker, markerCount) {
            return function () {
                infowindow.setContent(htmlMarkupForInfoWindow);
                infowindow.open(map, marker);
            }
        })(marker, markerCount));

    }

    function geocodeAddress(address, geocoder, htmltoshow) {
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
                console.log();
                addMarkerToMap(results[0].geometry.location.lat(), results[0].geometry.location.lng(), htmltoshow);
            } else {
                console.log('Geocode was not successful for the following reason: ' + status);
            }
        });
    }




    google.maps.event.addDomListener(window, 'load', initialize);
</script>
